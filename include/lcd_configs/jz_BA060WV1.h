/*
 * linux/drivers/video/jz_samsung_lms350df04.h -- Ingenic LCD driver
 */

#ifndef __JZ__BA060WV1_H__
#define __JZ__BA060WV1_H__
#include <serial.h>
#include <common.h>
#include <config.h>
#include <act8600_power.h>


#define __spi_write_reg(cmd,val)                \
    ({                                          \
        unsigned char no;                       \
        unsigned int  value;                    \
        unsigned char a=0;                      \
        unsigned short b=0;                     \
        a=cmd & 0xff;                           \
        b=val;                                  \
                                                \
        __gpio_set_pin(SPEN);                   \
                                                \
        __gpio_clear_pin(SPDT);                 \
        udelay(25);                             \
        __gpio_clear_pin(SPEN);                 \
        udelay(25);                             \
        value=((a<<8)|(b&0xFF));                \
        for(no=0;no<16;no++)                    \
        {                                       \
            __gpio_clear_pin(SPCK);             \
            if((value&0x8000)==0x8000){         \
                __gpio_set_pin(SPDT);           \
            }                                   \
            else{                               \
                __gpio_clear_pin(SPDT);         \
            }                                   \
            udelay(25);                         \
            __gpio_set_pin(SPCK);               \
            value=(value<<1);                   \
            udelay(25);                         \
        }                                       \
                                                \
        __gpio_clear_pin(SPCK);                 \
        __gpio_set_pin(SPEN);                   \
        udelay(100);                            \
    })

static void spi_write_reg(u16 reg,u16 val)      
{
		__spi_write_reg(0x20,(reg>>8)&0xff);	
		__spi_write_reg(0x00,reg&0xff);			
		__spi_write_reg(0x40,val&0xff);			
}

static void panel_display_on(void)
{
    serial_puts("panel_display_on !!!\n");

    __gpio_as_output(LCD_RESET_PIN);
    __gpio_as_output(SPEN);
    __gpio_as_output(SPDT);
    __gpio_as_output(SPCK);

    __gpio_set_pin(LCD_RESET_PIN);
    udelay(20000);
    __gpio_clear_pin(LCD_RESET_PIN);/*hardware reset*/
	udelay(20000);
	__gpio_set_pin(LCD_RESET_PIN);
    udelay(120000);

//Enable Page1
	spi_write_reg(0xF000,0x55);
	spi_write_reg(0xF001,0xAA);
	spi_write_reg(0xF002,0x52);
	spi_write_reg(0xF003,0x08);
	spi_write_reg(0xF004,0x01);
	
	//////////////////////////////////////////////////////////);
	// Select Pump/PFM circuit for AVDD/AVEE //);
	//////////////////////////////////////////////////////////);
	//spi_write_reg(0xC200,0x03	// Pump ON; PFM OFF);
	spi_write_reg(0xC200,0x53);
	//////////////////////////////////////////////////////////);
	
	// AVDD: manual, 6V (0x44: 2.5xVCI));
	
	spi_write_reg(0xB600,0x44);
	spi_write_reg(0xB601,0x44);
	spi_write_reg(0xB602,0x44);
	
	spi_write_reg(0xB000,0x05);
	spi_write_reg(0xB001,0x05);
	spi_write_reg(0xB002,0x05);
	
	// AVEE: manual, -6V (0x34: -2.5xVCI));
	
	spi_write_reg(0xB700,0x34);
	spi_write_reg(0xB701,0x34);
	spi_write_reg(0xB702,0x34);
	
	spi_write_reg(0xB100,0x05);
	spi_write_reg(0xB101,0x05);
	spi_write_reg(0xB102,0x05);
	
	//Power Control for VCL);
	spi_write_reg(0xB800,0x34);
	spi_write_reg(0xB200,0x00 );
	
	// VGH: Clamp Enable, 2*AVDD-AVEE, 13V(0x00,0x34,0x0B));
	spi_write_reg(0xBF00,0x00);
	spi_write_reg(0xB900,0x24);
	spi_write_reg(0xB901,0x24);
	spi_write_reg(0xB902,0x24);
	
	spi_write_reg(0xB300,0x06);
	spi_write_reg(0xB301,0x06);
	spi_write_reg(0xB302,0x06);
	
	// VGL(LVGL):);
	spi_write_reg(0xBA00,0x14);
	spi_write_reg(0xBA01,0x14);
	spi_write_reg(0xBA02,0x14);
	
	// VGL_REG(VGLO):-13V);
	//spi_write_reg(0xB500,0x0b);
	//spi_write_reg(0xB501,0x0b);
	//spi_write_reg(0xB502,0x0b);
	
	// VGMP/VGSP:  4.5v);
	spi_write_reg(0xBC00,0X00 );
	spi_write_reg(0xBC01,0x78);
	spi_write_reg(0xBC02,0X00 );
	
	// VGMN/VGSN  -4.5v);
	spi_write_reg(0xBD00,0x00);
	spi_write_reg(0xBD01,0x78);
	spi_write_reg(0xBD02,0x00);
	
	// VCOM=-0.8375);
	spi_write_reg(0xBE00,0x00);
	spi_write_reg(0xBE01,0x30);
	
	//R+ 
	spi_write_reg(0xD100,0x00);
	spi_write_reg(0xD101,0x0A);
	spi_write_reg(0xD102,0x00);
	spi_write_reg(0xD103,0x13);
	spi_write_reg(0xD104,0x00);
	spi_write_reg(0xD105,0x1C);
	spi_write_reg(0xD106,0x00);
	spi_write_reg(0xD107,0x3B);
	spi_write_reg(0xD108,0x00);
	spi_write_reg(0xD109,0x62);
	spi_write_reg(0xD10A,0x00);
	spi_write_reg(0xD10B,0xAD);
	spi_write_reg(0xD10C,0x00);
	spi_write_reg(0xD10D,0xE5);
	spi_write_reg(0xD10E,0x01);
	spi_write_reg(0xD10F,0x33);
	spi_write_reg(0xD110,0x01);
	spi_write_reg(0xD111,0x66);
	spi_write_reg(0xD112,0x01);
	spi_write_reg(0xD113,0xAC);
	
	spi_write_reg(0xD114,0x01);
	spi_write_reg(0xD115,0xC2);
	spi_write_reg(0xD116,0x02);
	spi_write_reg(0xD117,0x17);
	spi_write_reg(0xD118,0x02);
	spi_write_reg(0xD119,0x43);
	spi_write_reg(0xD11A,0x02);
	spi_write_reg(0xD11B,0x45);
	spi_write_reg(0xD11C,0x02);
	spi_write_reg(0xD11D,0x6C);
	spi_write_reg(0xD11E,0x02);
	spi_write_reg(0xD11F,0x91);
	spi_write_reg(0xD120,0x02);
	spi_write_reg(0xD121,0xA5);
	spi_write_reg(0xD122,0x02);
	spi_write_reg(0xD123,0xBC);
	spi_write_reg(0xD124,0x02);
	spi_write_reg(0xD125,0xCB);
	spi_write_reg(0xD126,0x02);
	spi_write_reg(0xD127,0xDE);
	spi_write_reg(0xD128,0x02);
	spi_write_reg(0xD129,0xEA);
	spi_write_reg(0xD12A,0x02);
	spi_write_reg(0xD12B,0xFB);
	spi_write_reg(0xD12C,0x03);
	spi_write_reg(0xD12D,0x06);
	spi_write_reg(0xD12E,0x03);
	spi_write_reg(0xD12F,0x16);
	spi_write_reg(0xD130,0x03);
	spi_write_reg(0xD131,0x37);
	spi_write_reg(0xD132,0x03);
	spi_write_reg(0xD133,0x90);
	
	//G+
	spi_write_reg(0xD200,0x00);
	spi_write_reg(0xD201,0x0A);
	spi_write_reg(0xD202,0x00);
	spi_write_reg(0xD203,0x13);
	spi_write_reg(0xD204,0x00);
	spi_write_reg(0xD205,0x1C);
	spi_write_reg(0xD206,0x00);
	spi_write_reg(0xD207,0x3B);
	spi_write_reg(0xD208,0x00);
	spi_write_reg(0xD209,0x62);
	spi_write_reg(0xD20A,0x00);
	spi_write_reg(0xD20B,0xAD);
	spi_write_reg(0xD20C,0x00);
	spi_write_reg(0xD20D,0xE5);
	spi_write_reg(0xD20E,0x01);
	spi_write_reg(0xD20F,0x33);
	spi_write_reg(0xD210,0x01);
	spi_write_reg(0xD211,0x66);
	spi_write_reg(0xD212,0x01);
	spi_write_reg(0xD213,0xAC);
	
	spi_write_reg(0xD214,0x01);
	spi_write_reg(0xD215,0xC2);
	spi_write_reg(0xD216,0x02);
	spi_write_reg(0xD217,0x17);
	spi_write_reg(0xD218,0x02);
	spi_write_reg(0xD219,0x43);
	spi_write_reg(0xD21A,0x02);
	spi_write_reg(0xD21B,0x45);
	spi_write_reg(0xD21C,0x02);
	spi_write_reg(0xD21D,0x6C);
	spi_write_reg(0xD21E,0x02);
	spi_write_reg(0xD21F,0x91);
	spi_write_reg(0xD220,0x02);
	spi_write_reg(0xD221,0xA5);
	spi_write_reg(0xD222,0x02);
	spi_write_reg(0xD223,0xBC);
	spi_write_reg(0xD224,0x02);
	spi_write_reg(0xD225,0xCB);
	spi_write_reg(0xD226,0x02);
	spi_write_reg(0xD227,0xDE);
	spi_write_reg(0xD228,0x02);
	spi_write_reg(0xD229,0xEA);
	spi_write_reg(0xD22A,0x02);
	spi_write_reg(0xD22B,0xFB);
	spi_write_reg(0xD22C,0x03);
	spi_write_reg(0xD22D,0x06);
	spi_write_reg(0xD22E,0x03);
	spi_write_reg(0xD22F,0x16);
	spi_write_reg(0xD230,0x03);
	spi_write_reg(0xD231,0x37);
	spi_write_reg(0xD232,0x03);
	spi_write_reg(0xD233,0x90);
	
	//B+
	spi_write_reg(0xD300,0x00);
	spi_write_reg(0xD301,0x0A);
	spi_write_reg(0xD302,0x00);
	spi_write_reg(0xD303,0x13);
	spi_write_reg(0xD304,0x00);
	spi_write_reg(0xD305,0x1C);
	spi_write_reg(0xD306,0x00);
	spi_write_reg(0xD307,0x3B);
	spi_write_reg(0xD308,0x00);
	spi_write_reg(0xD309,0x62);
	spi_write_reg(0xD30A,0x00);
	spi_write_reg(0xD30B,0xAD);
	spi_write_reg(0xD30C,0x00);
	spi_write_reg(0xD30D,0xE5);
	spi_write_reg(0xD30E,0x01);
	spi_write_reg(0xD30F,0x33);
	spi_write_reg(0xD310,0x01);
	spi_write_reg(0xD311,0x66);
	spi_write_reg(0xD312,0x01);
	spi_write_reg(0xD313,0xAC);
	
	spi_write_reg(0xD314,0x01);
	spi_write_reg(0xD315,0xC2);
	spi_write_reg(0xD316,0x02);
	spi_write_reg(0xD317,0x17);
	spi_write_reg(0xD318,0x02);
	spi_write_reg(0xD319,0x43);
	spi_write_reg(0xD31A,0x02);
	spi_write_reg(0xD31B,0x45);
	spi_write_reg(0xD31C,0x02);
	spi_write_reg(0xD31D,0x6C);
	spi_write_reg(0xD31E,0x02);
	spi_write_reg(0xD31F,0x91);
	spi_write_reg(0xD320,0x02);
	spi_write_reg(0xD321,0xA5);
	spi_write_reg(0xD322,0x02);
	spi_write_reg(0xD323,0xBC);
	spi_write_reg(0xD324,0x02);
	spi_write_reg(0xD325,0xCB);
	spi_write_reg(0xD326,0x02);
	spi_write_reg(0xD327,0xDE);
	spi_write_reg(0xD328,0x02);
	spi_write_reg(0xD329,0xEA);
	spi_write_reg(0xD32A,0x02);
	spi_write_reg(0xD32B,0xFB);
	spi_write_reg(0xD32C,0x03);
	spi_write_reg(0xD32D,0x06);
	spi_write_reg(0xD32E,0x03);
	spi_write_reg(0xD32F,0x16);
	spi_write_reg(0xD330,0x03);
	spi_write_reg(0xD331,0x37);
	spi_write_reg(0xD332,0x03);
	spi_write_reg(0xD333,0x90);
	
	//R-
	spi_write_reg(0xD400,0x00);
	spi_write_reg(0xD401,0x0A);
	spi_write_reg(0xD402,0x00);
	spi_write_reg(0xD403,0x13);
	spi_write_reg(0xD404,0x00);
	spi_write_reg(0xD405,0x1C);
	spi_write_reg(0xD406,0x00);
	spi_write_reg(0xD407,0x3B);
	spi_write_reg(0xD408,0x00);
	spi_write_reg(0xD409,0x62);
	spi_write_reg(0xD40A,0x00);
	spi_write_reg(0xD40B,0xAD);
	spi_write_reg(0xD40C,0x00);
	spi_write_reg(0xD40D,0xE5);
	spi_write_reg(0xD40E,0x01);
	spi_write_reg(0xD40F,0x33);
	spi_write_reg(0xD410,0x01);
	spi_write_reg(0xD411,0x66);
	spi_write_reg(0xD412,0x01);
	spi_write_reg(0xD413,0xAC);
	spi_write_reg(0xD414,0x01);
	spi_write_reg(0xD415,0xDA);
	spi_write_reg(0xD416,0x02);
	spi_write_reg(0xD417,0x17);
	spi_write_reg(0xD418,0x02);
	spi_write_reg(0xD419,0x43);
	spi_write_reg(0xD41A,0x02);
	spi_write_reg(0xD41B,0x45);
	spi_write_reg(0xD41C,0x02);
	spi_write_reg(0xD41D,0x6C);
	spi_write_reg(0xD41E,0x02);
	spi_write_reg(0xD41F,0x91);
	spi_write_reg(0xD420,0x02);
	spi_write_reg(0xD421,0xA5);
	spi_write_reg(0xD422,0x02);
	spi_write_reg(0xD423,0xBC);
	spi_write_reg(0xD424,0x02);
	spi_write_reg(0xD425,0xCB);
	spi_write_reg(0xD426,0x02);
	spi_write_reg(0xD427,0xDE);
	spi_write_reg(0xD428,0x02);
	spi_write_reg(0xD429,0xEA);
	spi_write_reg(0xD42A,0x02);
	spi_write_reg(0xD42B,0xFB);
	spi_write_reg(0xD42C,0x03);
	spi_write_reg(0xD42D,0x06);
	spi_write_reg(0xD42E,0x03);
	spi_write_reg(0xD42F,0x16);
	spi_write_reg(0xD430,0x03);
	spi_write_reg(0xD431,0x37);
	spi_write_reg(0xD432,0x03);
	spi_write_reg(0xD433,0x90);
	
	//G-
	spi_write_reg(0xD500,0x00);
	spi_write_reg(0xD501,0x0A);
	spi_write_reg(0xD502,0x00);
	spi_write_reg(0xD503,0x13);
	spi_write_reg(0xD504,0x00);
	spi_write_reg(0xD505,0x1C);
	spi_write_reg(0xD506,0x00);
	spi_write_reg(0xD507,0x3B);
	spi_write_reg(0xD508,0x00);
	spi_write_reg(0xD509,0x62);
	spi_write_reg(0xD50A,0x00);
	spi_write_reg(0xD50B,0xAD);
	spi_write_reg(0xD50C,0x00);
	spi_write_reg(0xD50D,0xE5);
	spi_write_reg(0xD50E,0x01);
	spi_write_reg(0xD50F,0x33);
	spi_write_reg(0xD510,0x01);
	spi_write_reg(0xD511,0x66);
	spi_write_reg(0xD512,0x01);
	spi_write_reg(0xD513,0xAC);
	spi_write_reg(0xD514,0x01);
	spi_write_reg(0xD515,0xDA);
	spi_write_reg(0xD516,0x02);
	spi_write_reg(0xD517,0x17);
	spi_write_reg(0xD518,0x02);
	spi_write_reg(0xD519,0x43);
	spi_write_reg(0xD51A,0x02);
	spi_write_reg(0xD51B,0x45);
	spi_write_reg(0xD51C,0x02);
	spi_write_reg(0xD51D,0x6C);
	spi_write_reg(0xD51E,0x02);
	spi_write_reg(0xD51F,0x91);
	spi_write_reg(0xD520,0x02);
	spi_write_reg(0xD521,0xA5);
	spi_write_reg(0xD522,0x02);
	spi_write_reg(0xD523,0xBC);
	spi_write_reg(0xD524,0x02);
	spi_write_reg(0xD525,0xCB);
	spi_write_reg(0xD526,0x02);
	spi_write_reg(0xD527,0xDE);
	spi_write_reg(0xD528,0x02);
	spi_write_reg(0xD529,0xEA);
	spi_write_reg(0xD52A,0x02);
	spi_write_reg(0xD52B,0xFB);
	spi_write_reg(0xD52C,0x03);
	spi_write_reg(0xD52D,0x06);
	spi_write_reg(0xD52E,0x03);
	spi_write_reg(0xD52F,0x16);
	spi_write_reg(0xD530,0x03);
	spi_write_reg(0xD531,0x37);
	spi_write_reg(0xD532,0x03);
	spi_write_reg(0xD533,0x90);
	
	//B-
	spi_write_reg(0xD600,0x00);
	spi_write_reg(0xD601,0x0A);
	spi_write_reg(0xD602,0x00);
	spi_write_reg(0xD603,0x13);
	spi_write_reg(0xD604,0x00);
	spi_write_reg(0xD605,0x1C);
	spi_write_reg(0xD606,0x00);
	spi_write_reg(0xD607,0x3B);
	spi_write_reg(0xD608,0x00);
	spi_write_reg(0xD609,0x62);
	spi_write_reg(0xD60A,0x00);
	spi_write_reg(0xD60B,0xAD);
	spi_write_reg(0xD60C,0x00);
	spi_write_reg(0xD60D,0xE5);
	spi_write_reg(0xD60E,0x01);
	spi_write_reg(0xD60F,0x33);
	spi_write_reg(0xD610,0x01);
	spi_write_reg(0xD611,0x66);
	spi_write_reg(0xD612,0x01);
	spi_write_reg(0xD613,0xAC);
	spi_write_reg(0xD614,0x01);
	spi_write_reg(0xD615,0xDA);
	spi_write_reg(0xD616,0x02);
	spi_write_reg(0xD617,0x17);
	spi_write_reg(0xD618,0x02);
	spi_write_reg(0xD619,0x43);
	spi_write_reg(0xD61A,0x02);
	spi_write_reg(0xD61B,0x45);
	spi_write_reg(0xD61C,0x02);
	spi_write_reg(0xD61D,0x6C);
	spi_write_reg(0xD61E,0x02);
	spi_write_reg(0xD61F,0x91);
	spi_write_reg(0xD620,0x02);
	spi_write_reg(0xD621,0xA5);
	spi_write_reg(0xD622,0x02);
	spi_write_reg(0xD623,0xBC);
	spi_write_reg(0xD624,0x02);
	spi_write_reg(0xD625,0xCB);
	spi_write_reg(0xD626,0x02);
	spi_write_reg(0xD627,0xDE);
	spi_write_reg(0xD628,0x02);
	spi_write_reg(0xD629,0xEA);
	spi_write_reg(0xD62A,0x02);
	spi_write_reg(0xD62B,0xFB);
	spi_write_reg(0xD62C,0x03);
	spi_write_reg(0xD62D,0x06);
	spi_write_reg(0xD62E,0x03);
	spi_write_reg(0xD62F,0x16);
	spi_write_reg(0xD630,0x03);
	spi_write_reg(0xD631,0x37);
	spi_write_reg(0xD632,0x03);
	spi_write_reg(0xD633,0x90);
	
	
	//=========Enable Page0);
	spi_write_reg(0xF000,0x55);
	spi_write_reg(0xF001,0xAA);
	spi_write_reg(0xF002,0x52);
	spi_write_reg(0xF003,0x08);
	spi_write_reg(0xF004,0x00);
	
	// RGB Internal mode);
	//spi_write_reg(0xB300,0x01);
	
	spi_write_reg(0xB400,0x10);
	
	// RGB I/F Setting);
	spi_write_reg(0xB000,0x00);
	spi_write_reg(0xB001,0x05);
	spi_write_reg(0xB002,0x02);
	spi_write_reg(0xB003,0x05);
	spi_write_reg(0xB004,0x02);
	
	//===Scan Direction);
	spi_write_reg(0xB101,0x00);
	
	//// SDT:);
	spi_write_reg(0xB600,0x05);
	
	//// Gate EQ:);
	spi_write_reg(0xB700,0x70);
	spi_write_reg(0xB701,0x70);
	
	//// Source EQ: 05);
	spi_write_reg(0xB800,0x01);
	spi_write_reg(0xB801,0x0a);
	spi_write_reg(0xB802,0x0a);
	spi_write_reg(0xB803,0x0a);
	
	// Inversion: Column inversion (NVT));
	spi_write_reg(0xBC00,0x01);
	spi_write_reg(0xBC01,0x00);
	spi_write_reg(0xBC02,0x00);
	
	// BOE's Setting (default));
	spi_write_reg(0xCC00,0x03);
	spi_write_reg(0xCC01,0x50);
	spi_write_reg(0xCC02,0x50);
	
	// Set resolution as 480*854 (for 6"));
	spi_write_reg(0xB500,0x6B);
	
	// Display Timing:);
	spi_write_reg(0xBD00,0x01);
	spi_write_reg(0xBD01,0x84);
	spi_write_reg(0xBD02,0x07);
	spi_write_reg(0xBD03,0x31);
	spi_write_reg(0xBD04,0x00);
	
	spi_write_reg(0xFF00,0xAA);
	spi_write_reg(0xFF01,0x55);
	spi_write_reg(0xFF02,0x25);
	spi_write_reg(0xFF03,0x01);
	
	//spi_write_reg(0xF304,0x11);
	//spi_write_reg(0xF306,0x10);
	//spi_write_reg(0xF408,0x00);
	
	spi_write_reg(0x3a00,0x77);
	
	spi_write_reg(0x3600,0x00);

	spi_write_reg(0x1100,0x00);
	udelay(120000);
	spi_write_reg(0x2900,0x00);
    
    spi_write_reg(0x2A00,0x00);
    spi_write_reg(0x2A01,0x00);
    spi_write_reg(0x2A02,0x01);
    spi_write_reg(0x2A03,0xDF);

    spi_write_reg(0x2B00,0x00);
    spi_write_reg(0x2B01,0x00);
    spi_write_reg(0x2B02,0x03);
    spi_write_reg(0x2B03,0x55);

    spi_write_reg(0x2C00,0x00);
    
}

#define __lcd_special_pin_init()		\
do {                                            \
    __gpio_as_output(LCD_VCC_EN); \
    __gpio_set_pin(LCD_VCC_EN); \
} while (0)

#define __lcd_special_on()                      \
do {                                            \
     panel_display_on();                    \
} while (0)

#define __lcd_special_off()         \
do {                               \
__gpio_clear_pin(GPIO_LCD_POWERON); \
} while(0)

#endif	/* __JZ__BA060WV1_H__  */

